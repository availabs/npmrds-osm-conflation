#!/usr/bin/env node

/* eslint no-param-reassign: 0 */

// USAGE: Pipe OSM file in through STDIN, get GeoJSON out through STDOUT

// NOTE: There is a way to do all of this solely with ogr2ogr:
//   https://github.com/OSGeo/gdal/blob/master/gdal/data/osmconf.ini
//   https://gdal.org/drivers/vector/osm.html
//   https://gis.stackexchange.com/questions/215948/splitting-other-tags-from-osm-file

const { exec } = require('child_process');
const { duplex, pipe, through } = require('mississippi');
const split = require('split2');

const { stdin: subSTDIN, stdout: subSTDOUT, stderr: subSTDERR } = exec(
  "ogr2ogr -f 'GeoJSON' /vsistdout/ /vsistdin/ lines | jq -c '.features[]'"
);

const xml2NdjsonStream = duplex(subSTDIN, subSTDOUT);

subSTDERR.pipe(process.stderr);

pipe(
  process.stdin,
  xml2NdjsonStream,
  split(JSON.parse),
  through.obj(function otherTagsExpander(feature, _, cb) {
    const { other_tags } = feature.properties;

    if (other_tags) {
      const parsed_other_tags = JSON.parse(
        `{${other_tags.replace(/=>/g, ':')}}`
      );

      Object.assign(feature.properties, parsed_other_tags);

      // do not output the pre-parsed other_tags property
      feature.properties.other_tags = undefined;
    }

    this.push(`${JSON.stringify(feature)}\n`);

    return cb();
  }),
  process.stdout
);
