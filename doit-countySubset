#!/bin/bash

set -e
set -a

cd "$( dirname "${BASH_SOURCE[0]}" )"

. ../.env

if [ "$#" -ne 1 ]; then
  (>&2 echo "ERROR: You must specify the county name as the 1st and only CLI argument.")
  exit 1
fi

OSM_PLANET_VER=181224
SHST_TILES_CACHE_DIR="$HOME/.shst/cache/tiles/osm/planet-$OSM_PLANET_VER"

COUNTY="${1,,}"
COUNTY_NPMRDS_FILE="data/npmrds/inrix.$COUNTY.geojson"
COUNTY_OSM_XML_FILE="data/osm/$COUNTY.osm"
COUNTY_OSM_PBF_FILE="data/osm/$COUNTY.osm.pbf"
COUNTY_SHST_FILE="data/shst/shst.$COUNTY.geojson"
COUNTY_SHST_MATCHED_FILE="data/shst/shst.$COUNTY.matched.geojson"
COUNTY_SHST_UNMATCHED_FILE="data/shst/shst.$COUNTY.unmatched.geojson"

# echo "Loading NPMRDS shapeile to PostgreSQL Database"
# ./upload-extended-npmrds-shapefile data/npmrds/inrix_expanded.zip

# echo "Loading NPMRDS TMC_Identification to PostgreSQL Database"
# ./upload-tmc-identification data/npmrds/TMC_Identification.csv

# if [ ! -f "$COUNTY_NPMRDS_FILE" ]; then
#     echo "Creating NPMRDS county subset GeoJSON file."
#   ./createCountyNPMRDSGeoJSON "$COUNTY" > "$COUNTY_NPMRDS_FILE"
# else
#     echo "NPMRDS county subset GeoJSON file already exists."
# fi
# 
# if [ ! -f "$COUNTY_SHST_MATCHED_FILE" ]; then
#   echo "Matching county NPMRDS to SharedStreets reference system"
#   ../sharedstreets_conflation/shstMatchNPMRDS "$COUNTY_NPMRDS_FILE" "$COUNTY_SHST_FILE"
# 
#   echo "  SharedStreets matched:   $(jq -c '.features[]' "$COUNTY_SHST_MATCHED_FILE" | wc -l)"
#   echo "  SharedStreets unmatched: $(jq -c '.features[]' "$COUNTY_SHST_UNMATCHED_FILE" | wc -l)"
# else
#     echo "SharedStreet match output files already exists."
# fi
# 
# if [ ! -f "$COUNTY_OSM_XML_FILE" ]; then
#   ./createCountyOSMSubset "$COUNTY" xml > "$COUNTY_OSM_XML_FILE"
# fi
# 
# if [ ! -f "$COUNTY_OSM_PBF_FILE" ]; then
#   ./createCountyOSMSubset "$COUNTY" pbf > "$COUNTY_OSM_PBF_FILE"
# fi
# 
# mkdir -p sharedstreets_tiles
# cp --no-clobber "$SHST_TILES_CACHE_DIR/"* sharedstreets_tiles
# 
# ./scrapeMissingSharedStreetsMetadataFiles "$OSM_PLANET_VER"
# 
# rm -rf sharedstreets_ndjson
# mkdir sharedstreets_ndjson
./tileSetToNDJSON \
  --tilesetDir ./sharedstreets_tiles \
  --outputDir sharedstreets_ndjson \
  --clean

# 
# #### Database DDL ####
# 
# ./createDatabase
# 
# psql -f ./sql/createSharedStreetsTables.sql
# psql -f ./sql/createRoadInventorySystemTables.sql

#### Load Database ####
# 
# ./load_osm_into_db "$COUNTY_OSM_XML_FILE"
# 
# ./load_tileset_ndjson_into_db \
  # --tilesetNDJSONDir \
  # ./sharedstreets_ndjson \
  # --clean

# ./load_tileset_ndjson_into_db --tilesetNDJSONDir ./sharedstreets_ndjson --clean
# 
# ./load_shst_matched_output_into_db \
#   --clean \
#   --shstTmcMatchesFile \
#   "$COUNTY_SHST_MATCHED_FILE"

# ./load_ris_geodatabase_county_subset "$COUNTY"
# ./extractAlbanyRISAsGeoJSON > ./data/ris/geojson/ris.albany.geojson
