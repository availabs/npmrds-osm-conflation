#!/usr/bin/env node

/* eslint no-param-reassign: 0 */

const { join } = require('path');
const { pipe, through } = require('mississippi');

const levelup = require('levelup');
const leveldown = require('leveldown');
const encode = require('encoding-down');

const _ = require('lodash');

const dbsParentDir = join(__dirname, '../../data/leveldb/');
const JSON_ENC = { valueEncoding: 'json' };

const CONFLATION_FEATURES_DIR = join(dbsParentDir, 'conflationFeatures');

const conflationFeaturesDB = levelup(
  encode(leveldown(CONFLATION_FEATURES_DIR), JSON_ENC)
);

const outputFeatures = () =>
  new Promise((resolve, reject) =>
    pipe(
      conflationFeaturesDB.createValueStream(),
      through.obj(async function writer(feature, $, cb) {
        feature.properties = _.pick(feature.properties, [
          'id',
          'osm',
          'npmrds',
          'ris',
          'shst',
          'networklevel'
        ]);
        this.push(`${JSON.stringify(feature)}\n`);
        return cb();
      }),
      process.stdout,
      err => {
        if (err) {
          return reject(err);
        }
        return resolve();
      }
    )
  );

(async () => {
  try {
    await outputFeatures();
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
})();
