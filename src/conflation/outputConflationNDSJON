#!/usr/bin/env node

/* eslint no-restricted-syntax: 0 */

// https://github.com/sharedstreets/sharedstreets-ref-system#core-concepts

const _ = require('lodash');

const conflationMapSQLiteService = require('../services/conflationMapSQLiteService');
const shstMatchesSQLiteService = require('../services/shstMatchesSQLiteService');

const { shstOsmWayRoadClassRankings } = require('./constants')

let outputFeatureId = 0;

const iterator = conflationMapSQLiteService.makeConflationMapFeatureIterator();

for (const feature of iterator) {
  const {
    id,
    properties: {
      osm,
      npmrds_2017,
      npmrds_2019,
      ris_2019,
      segmentIndex,
      totalSegments,
      osmMetadata
    }
  } = feature;

  const [shstRefId] = id.split('|');

  feature.id = ++outputFeatureId;

  const { roadClass = 'Other' , oneWay = false } = osmMetadata || {}

  let networklevel = shstOsmWayRoadClassRankings[roadClass]

  if (oneWay) {
    networklevel += 0.5
  }

  feature.properties = {
    id: feature.id,
    osm,
    split_seg: `${segmentIndex}:${totalSegments}`,
    networklevel
  };


  if (npmrds_2017) {
    feature.properties.tmc_2017 = npmrds_2017;

    const tmc2017idx = shstMatchesSQLiteService.getShstReferenceIndexForTargetMapSegment(
      'npmrds_2017',
      npmrds_2017,
      shstRefId
    );

    if (!_.isNil(tmc2017idx)) {
      feature.properties.tmc2017idx = tmc2017idx;
    }
  }

  if (npmrds_2019) {
    feature.properties.tmc_2019 = npmrds_2019;

    const tmc2019idx = shstMatchesSQLiteService.getShstReferenceIndexForTargetMapSegment(
      'npmrds_2019',
      npmrds_2019,
      shstRefId
    );

    if (!_.isNil(tmc2019idx)) {
      feature.properties.tmc2019idx = tmc2019idx;
    }
  }

  if (ris_2019) {
    feature.properties.ris_2019 = ris_2019.replace(/##/g, '|');

    const ris2019idx = shstMatchesSQLiteService.getShstReferenceIndexForTargetMapSegment(
      'ris_2019',
      ris_2019,
      shstRefId
    );

    if (!_.isNil(ris2019idx)) {
      feature.properties.ris2019idx = ris2019idx;
    }
  }

  console.log(JSON.stringify(feature));
}
