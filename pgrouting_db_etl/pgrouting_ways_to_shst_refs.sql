-- TODO: Figure out what's going on here:
-- npmrds_routing=# select count(id) from reference ;
--  count
-- -------
--  37027
-- (1 row)
--
-- npmrds_routing=# select count(distinct id) from reference ;
--  count
-- -------
--  37025
-- (1 row)

-- ===== STEP 1 =====
--    Create a view that extracts the relevant geom->way->nodes info
--        from the JSONB columns. This simplifies future SQL commands.
-- For LATERAL JOIN documentation, see:
--     https://www.postgresql.org/docs/9.4/queries-table-expressions.html

--  CREATE OR REPLACE VIEW sharedstreets.geom_ways_nodes_view
  --  AS
    --  SELECT
        --  geometry_id,
        --  TRIM(
          --  both '"' FROM way_section->>'wayId'
        --  ) AS way_id,
        --  (way_sections).way_geom_idx,
        --  TRIM(
          --  both '"' FROM node_id::TEXT
        --  ) AS node_id,
        --  (node_ids).node_way_idx
      --  FROM sharedstreets.metadata,
        --  jsonb_array_elements(osm_metadata->'waySections') WITH ordinality AS way_sections(way_section, way_geom_idx),
        --  jsonb_array_elements((way_sections).way_section->'nodeIds') WITH ordinality AS node_ids(node_id, node_way_idx)
--  ;

-- QUESTION: How well does the shst metadata cover the pgRouting ways?
--
--   npmrds_routing=# select count(distinct osm_id) from ways;
--    count
--   -------
--     9771
--   (1 row)
--
--   npmrds_routing=# select count(distinct osm_id) from ways inner join geom_ways_nodes_view on (osm_id::TEXT = way_id);
--    count
--   -------
--     9771
--   (1 row)
--
-- ANSWER: Complete coverage.


-- ===== Step 2 =====
-- QUESTION: What is the structure of the reference location_references objects?
-- ANSWER:
-- npmrds_routing=# select jsonb_pretty(location_references) from reference limit 1;
--                          jsonb_pretty
-- ---------------------------------------------------------------
--  [                                                            +
--      {                                                        +
--          "lat": 42.72553,                                     +
--          "lon": -73.7976228,                                  +
--          "intersectionId": "6e31010486dc258730796fba113e59fd",+
--          "outboundBearing": 138,                              +
--          "distanceToNextRef": 30131                           +
--      },                                                       +
--      {                                                        +
--          "lat": 42.7232909,                                   +
--          "lon": -73.7955637,                                  +
--          "inboundBearing": 146,                               +
--          "intersectionId": "3a4092619f77bb5a0ca7a36c9983bb14" +
--      }                                                        +
--  ]
-- (1 row)
--
-- TODO: What's the meaning of the "distanceToNextRef" field in the first location reference?
--
-- QUESTION: Are all shst reference location_reference arrays length 2?
--
-- npmrds_routing=# select distinct jsonb_array_length(location_references) from reference order by 1 desc;
--  jsonb_array_length
-- --------------------
--                   2
-- (1 row)
--
-- ANSWER: Yes.
--
-- QUESTION: For every location_reference, is the 1st point the "outbound" and the 2nd the "inbound"?
-- npmrds_routing=# select count(1) from  reference ;
--  count
-- -------
--  37027
-- (1 row)
--
-- npmrds_routing=# select count(1) from reference where (
--   (location_references->0->>'outboundBearing' IS NOT NULL) AND (location_references->1->>'inboundBearing' IS NOT NULL)
-- );
--  count
-- -------
--  37027
-- (1 row)
--
-- ANSWER: yes
--
-- Question: How many references per geometry?
-- npmrds_routing=# select distinct count(id) from reference group by geometry_id having count(id) > 1 order by 1 desc;
--  count
-- -------
--      2
-- (1 row)
--
-- Question: For every geometry -> references pair, are the location_reference coords simply flipped?
--           In other words, are the associated references the same road segment with different travel direction?
--
-- npmrds_routing=# select count(1) from reference a inner join reference b using (geometry_id) where a.id <> b.id;
--  count
-- -------
--  34692
-- (1 row)
--
-- npmrds_routing=# select count(1) from reference a inner join reference b using (geometry_id)
--   where (
-- 		(a.id <> b.id)
-- 		and
-- 		(a.location_references->0->>'intersectionId' = b.location_references->1->>'intersectionId')
-- 		and
-- 		(a.location_references->1->>'intersectionId' = b.location_references->0->>'intersectionId')
-- 	);
--
-- count
-- -------
-- 34692
-- (1 row)
--
-- ANSWER: Yes.
--
-- TODO: Prove that location_references[0] is the start, and location_references[1] is the end

--  CREATE OR REPLACE VIEW sharedstreets.ref_intersections
  --  AS
    --  SELECT
        --  id AS reference_id,
        --  geometry_id,
        --  TRIM(
          --  both '"' FROM location_references->0->>'intersectionId'
        --  ) AS start_intersection,
        --  TRIM(
          --  both '"' FROM location_references->1->>'intersectionId'
        --  ) AS end_intersection
      --  FROM sharedstreets.reference
--  ;

-- QUESTION: In the pgRouting ways table, does every way start and end at OSM nodes?
--
-- npmrds_routing=# select count(1) from ways w;
--  count
-- -------
--  20281
-- (1 row)
--
-- npmrds_routing=# select count(1)
-- 	from ways w
-- 	inner join osm_nodes ns on (w.source_osm = ns.osm_id)
-- 	inner join osm_nodes ne on (w.target_osm = ne.osm_id)
-- ;
--  count
-- -------
--  20281
-- (1 row)
--
-- ANSWER: yes

-- QUESTION: Does every pgRouting way start and end nodes
--     appear in the SharedStreets geometry ways nodes?
--
-- npmrds_routing=# select count(distinct gid) from ways;
--  count
-- -------
--  20281
-- (1 row)
--
-- npmrds_routing=# select count(distinct gid)
--   from ways w
-- 	where (
-- 		w.source_osm::TEXT in (select node_id from geom_ways_nodes_view)
-- 		and
-- 		w.target_osm::TEXT in (select node_id from geom_ways_nodes_view)
-- 	);
--  count
-- -------
--  20281
-- (1 row)
--
-- ANSWER: Yes.

-- QUESTION: Do all SharedStreets intersection node ids appear in the
--     appear in the SharedStreets geometry ways nodes?
-- npmrds_routing=# select count(1) from intersection ;
--  count
-- -------
--  15533
-- (1 row)
--
-- npmrds_routing=# select count(1) from intersection where node_id in (select node_id from geom_ways_nodes_view);
--  count
-- -------
--  15533
-- (1 row)
--
-- Answer: Yes

-- ASSERTION: pgRouting ways can be subsegments of the SharedStreets reference road segments
-- PROOF:
-- npmrds_routing=# select count(1) from ways;
--  count
-- -------
--  20281
-- (1 row)
--
-- npmrds_routing=# select count(1)
--   from ways
--     where (
-- 			(source_osm::TEXT in (select node_id from intersection))
-- 			and
-- 			(target_osm::TEXT in (select node_id from intersection))
-- 		);
--  count
-- -------
--  17994
-- (1 row)
--
-- TODO: Show that for every pgR way whose source and target nodes are not
--    SharedStreets intersection nodes, the source and target nodes
--    are internal nodes of the SharedStreets OSM ways. After that, QED.
--

-- QUESTION: Are all pgRouting way osm_ids (base OSM way) in the SharedStreets geom -> way nodes view?
--
-- npmrds_routing=# select count(1) from ways;
--  count
-- -------
--  20281
-- (1 row)
--
-- npmrds_routing=# select count(1) from ways where osm_id::TEXT in (select way_id from geom_ways_nodes_view);
--  count
-- -------
--  20281
-- (1 row)
--
-- ANSWER: Yes

-- ASSERTION: The pgR ways to OSM ways relationship is many-to-one
-- PROOF:
--
-- CONSEQUENCE: We have a
--   A) Every pgR way associates with one OSM way. (Trivial since gid is PRIMARY KEY)
-- npmrds_routing=# select distinct count(osm_id) from ways group by gid;
--  count
-- -------
--  1
-- (1 row)
--
--   B) OSM ways may pair with more that one pgR way.
-- npmrds_routing=# select osm_id, count(gid) from ways group by osm_id having count(1) > 1 order by 2 desc limit 10;
--   osm_id   | count
-- -----------+-------
--  112401605 |    51
--  146117022 |    42
--    5579995 |    41
--   83257649 |    36
--    5578474 |    36
--    5586741 |    33
--  110688042 |    32
--  139438011 |    31
--    5570823 |    30
--    5587269 |    30
-- (10 rows)
--
-- QED

--
-- Question: What is the cardinality of the SharedStreets references to OSM ways relationship?
--
-- npmrds_routing=# select count(distinct way_section->>'wayId')
--   from metadata, jsonb_array_elements(osm_metadata->'waySections') as way_section
-- 	group by geometry_id
-- 	order by 1 desc limit 1;
--  count
-- -------
--     18
-- (1 row)
--
-- npmrds_routing=# select count(distinct geometry_id)
--   from metadata, jsonb_array_elements(osm_metadata->'waySections') as way_section
-- 	group by way_section->>'wayId'
-- 	order by 1 desc limit 1;
--
--  count
-- -------
-- 		58
-- (1 row)
--
-- Answer: many-to-many

-- Question: What is the cardinality of the pgR ways to ShSt geometries relationship?
--   We already know that a geometry can contain multiple OSM ways, so we know that
--   there can be many pgR ways for every geometry.
--   Concerning how many ShSt geometries per pgR way:
-- npmrds_routing=# select ct as num_geoms, count(1)
--   from (
--     select count(distinct a.geometry_id) as ct
-- 		from ways
-- 			inner join geom_ways_nodes_view a on (source_osm::text = a.node_id)
--      inner join geom_ways_nodes_view b on (a. geometry_id = b.geometry_id and target_osm::text = b.node_id)
-- 		where (
-- 			a.node_way_idx < b.node_way_idx
-- 			and
-- 			ways.osm_id::text = a.way_id
-- 		)
-- 		group by gid
-- 	) as t
-- 	group by ct
-- 	order by 1;
--
--  num_geoms | count
-- -----------+-------
-- 				 1 | 15723
-- 				 2 |  3900
-- 				 3 |   655
-- (3 rows)
--
-- Answer: many-to-many

-- TODO: Figure out how to reliably join pgR ways to ShSt references

-- ========== Odd Cases 1 ==========
-- CASE: One shst geometry completely contains another. They cover the same section of road, with one
--       over 6x longer than the other. The problematic part is that the start_node and end_nodes
--       are the same in the geom_ways_nodes_view. This is obviously impossible.
--
-- npmrds_routing=# select gid, a.geometry_id, a.way_id, a.node_id as start_node, b.node_id as end_node
-- from ways w inner join geom_ways_nodes_view a on (w.osm_id::text = a.way_id and w.source_osm::text = a.node_id)
-- inner join  geom_ways_nodes_view b on (a.geometry_id = b.geometry_id and a.way_id = b.way_id and w.target_osm::text = b.node_id and a.node_way_idx < b.node_way_idx)
-- where gid = '13652';
--   gid  |           geometry_id            |  way_id   | start_node | end_node
-- -------+----------------------------------+-----------+------------+----------
--  13652 | 12a3a14a6f87d34230a3e6b011919082 | 100222206 | 41328037   | 41328049
--  13652 | b678916898b5c93fbdfd5b71f376f88f | 100222206 | 41328037   | 41328049
-- (2 rows)
--
-- npmrds_routing=# select st_contains(a.the_geom, b.the_geom) from geometry a, geometry b where a.id = 'b678916898b5c93fbdfd5b71f376f88f' and b.id = '12a3a14a6f87d34230a3e6b011919082';
--  st_contains
-- -------------
--  t
-- (1 row)
--
-- And their lengths are obviously different.
-- npmrds_routing=# select st_length(the_geom) from geometry where id = 'b678916898b5c93fbdfd5b71f376f88f';
--       st_length
-- ---------------------
--  0.00863390092036611
-- (1 row)
--
-- npmrds_routing=# select st_length(the_geom) from geometry where id = '12a3a14a6f87d34230a3e6b011919082';
--       st_length
-- ---------------------
--  0.00139070326220757
-- (1 row)

-- QUESTION: Is this a problem in the geom_ways_nodes_view?
--    More particularly, is that view build on a false understanding of the shst metadata table?
--    The view assumed that the geometry completely contains every OSM way in the "waySections".
--    If this is not true, then the nodes listed for each geometry are not guarateed to actually
--    be in the geometry. The first way's first node would also not reliably join it to the
--    geometry's from_intersction, and same for the last way's last node.
--
-- How many geometries?
-- npmrds_routing=# select count(1) from geometry;
--  count
-- -------
--  19681
-- (1 row)
--
-- How many geometries where
--   the geometry's from_intersection is first way's first node in the geom_ways_nodes view
--   and the geometry's to_intersection is last way's last node in the geom_ways_nodes view?
--
-- select count(distinct g.id)
--   from geometry g
--     inner join intersection fi on (g.from_intersection_id = fi.id)
--     inner join intersection ti on (g.to_intersection_id = ti.id)
--     inner join (
--       SELECT
--           geometry_id,
--           node_id AS start_node_id
--         FROM geom_ways_nodes_view
--         WHERE (
--           way_geom_idx = 1 and node_way_idx = 1
--         )
--     ) AS gwn_starts on (gwn_starts.geometry_id = g.id)
--     inner join (
--       SELECT
--           geometry_id,
--           node_id AS end_node_id
--         FROM geom_ways_nodes_view NATURAL INNER JOIN (
--           SELECT
--               geometry_id,
--               way_geom_idx,
--               MAX(node_way_idx) as node_way_idx
--             FROM geom_ways_nodes_view NATURAL INNER JOIN (
--               SELECT
--                   geometry_id,
--                   max(way_geom_idx) AS way_geom_idx
--                 FROM geom_ways_nodes_view
--                 GROUP BY geometry_id
--             ) as t2
--             GROUP BY geometry_id, way_geom_idx
--         ) as t1
--     ) gwn_ends ON (gwn_ends.geometry_id = g.id)
--   where (
--     (start_node_id = fi.node_id)
--     and
--     (end_node_id = ti.node_id)
--   )
-- ;
--
-- RESULT:
--  count
-- -------
--  19681
-- (1 row)
--
-- CONCLUSION: In the geom_ways_nodes view, the ways in the waySections are in fact
--     completely contained by the geometries. The node_id and node_way_idx cols are reliable
--     in regards to evert geometry's from_intersection and to_intersection.
--
-- Doh! This oddity is due to an error in the case's illustratory SQL statement.
-- Again...
--   select
--       gid,
--       a.geometry_id,
--       a.way_id,
--       a.node_id as start_node,
--       b.node_id as end_node
--     from ways w
--       inner join geom_ways_nodes_view a
--         on (
--           w.osm_id::text = a.way_id and w.source_osm::text = a.node_id
--         )
--       inner join  geom_ways_nodes_view b on (
--         a.geometry_id = b.geometry_id
--         and
--         a.way_id = b.way_id
--         and
--         w.target_osm::text = b.node_id
--         and
--         a.node_way_idx < b.node_way_idx
--       )
--     where gid = '13652'
--   ;
--
-- The problem is that a geometry can have many ways.
--    In this case, b678 has 2 ways, while 12a3 as only 1 way.
--
--   gid  |           geometry_id            |  way_id   | start_node | end_node
-- -------+----------------------------------+-----------+------------+----------
--  13652 | 12a3a14a6f87d34230a3e6b011919082 | 100222206 | 41328037   | 41328049
--  13652 | b678916898b5c93fbdfd5b71f376f88f | 100222206 | 41328037   | 41328049
-- (2 rows)
--
-- QUESTION: Why does a single geometry cross an intersection that breaks another geometry.
--     This is contrary to my understanding of how SharedStreets works.
--
-- npmrds_routing=# select id, from_intersection_id, to_intersection_id from geometry
--    where id in ('12a3a14a6f87d34230a3e6b011919082', 'b678916898b5c93fbdfd5b71f376f88f');
--                 id                |       from_intersection_id       |        to_intersection_id
-- ----------------------------------+----------------------------------+----------------------------------
--  12a3a14a6f87d34230a3e6b011919082 | 00306ecd7e657d9402e4d79a46463e6f | 03e841beb89fdac32e62c35cbda5d054
--  b678916898b5c93fbdfd5b71f376f88f | b7bf56dd68a209fb35fac0203bbb37fa | 4f8ee09c17d532804211f286d20343af
-- (2 rows)
--
-- select
--     g.id as geom_id,
--     fi.node_id as from_intsctn_node,
--     ti.node_id as to_intsctn_node
--   from geometry as g
--     inner join intersection as fi on (g.from_intersection_id = fi.id)
--     inner join intersection as ti on (g.to_intersection_id = ti.id)
--   where (
--     g.id in ('12a3a14a6f87d34230a3e6b011919082', 'b678916898b5c93fbdfd5b71f376f88f')
--   )
-- ;
--
-- RESULT:
--              geom_id              | from_intsctn_node | to_intsctn_node
-- ----------------------------------+-------------------+-----------------
--  12a3a14a6f87d34230a3e6b011919082 | 41328037          | 41328049
--  b678916898b5c93fbdfd5b71f376f88f | 41336163          | 41310717
--  b678916898b5c93fbdfd5b71f376f88f | 41336163          | 41310717
--  b678916898b5c93fbdfd5b71f376f88f | 41336163          | 41310717
--  b678916898b5c93fbdfd5b71f376f88f | 41336163          | 41310717
-- (5 rows)
--
--  QUESTION: Why the repeating lines in the above result?
--
-- npmrds_routing=# select count(1) from intersection where node_id = '41336163';
--  count 
-- -------
--      2
-- (1 row)
--
-- npmrds_routing=# select count(1) from intersection where node_id = '41310717';
--  count 
-- -------
--      2
-- (1 row)
--
-- ANSWER: Multiple ShSt intersections for the same node.
--
-- QUESTION: How common is the multiple intersections per node phenomenon?
--
-- select intersections_per_node, count(1)
--   from (
--  	  select count(1) as intersections_per_node from intersection group by node_id
--   ) as t
--   group by intersections_per_node
--   order by 1
-- 
--  intersections_per_node | count 
-- ------------------------+-------
--                       1 | 12615
--                       2 |  1074
--                       3 |   210
--                       4 |    35
-- (4 rows)
--
-- ANSWER
--
-- QUESTION: Why multiple intersections per node?
--
-- npmrds_routing=# select id, count(1) from intersection group by id having count(1) = 4;
-- id                | count 
-- ----------------------------------+-------
--  3f5fac977075cefa9ff4c82a366dd8a8 |     4
--  7b3bbe1ba0e9a7996d5e72d2867579c9 |     4
--  d48837610a6dc09445cabb3b09920aa4 |     4
--  79707622384209d77573ceaeccdc14e7 |     4
--  fc7d71c0499e73f02f62c9f953179948 |     4
--  5f248cb8ea5feebe6cfb98d874d2ac72 |     4
--  04d14d0a54cb3424c7132e1e821ab3d0 |     4
--  82a73e0ab802be32c951c5a03b5561cf |     4
--  9f09af2cf6301f62a74d24f9b52d9590 |     4
--  e99168daaab85de68e8f688c071e744e |     4
--  158717530c7b7e15543303b0202ed378 |     4
--  ca4498520f2489986b13743ba2772c16 |     4
--  1e3f78086f7707c8807c8fb36623dd3c |     4
--  0b9b1a4e063d79cec270601179bc1e1e |     4
--  51fb76ae0f34eda2a71d02b0229e5c05 |     4
--  3ab8706bc1c5adbd2e2632dfae621569 |     4
--  742fb0ac847a1803e39aa401e0a526b7 |     4
--  c3af98c4f837d4332b3dd8abe962c7da |     4
--  81f896b1fdf0de52af0a30c0d4992636 |     4
--  16bc34e2a4add377dde82e6de4cb4b79 |     4
--  fe20cb2730f9c182e845788e0b365c64 |     4
--  8297787ff00c1ad7955226e41059e1e2 |     4
--  a8a8625e1074fe55df5f4a1fee7822ea |     4
--  258dd24b3896cb0dadc2531725181a08 |     4
--  a5834da8175c91a364fd0103292bbd9d |     4
--  8759a22b37e985df78b07198859f90fc |     4
--  f8899e4e1c0bddc96bcde5f9e407dad2 |     4
--  18ff82241874deb46d802e37bdb8ab0c |     4
--  559500103a450b63a3d3cb13f5f3a391 |     4
--  a1598e4b069415a9006048f474e62520 |     4
--  981aeb6b3edc5404c7b54406c5f5874d |     4
--  7001dda665adabc3c84f157588d93d2d |     4
--  3f56e4ba486bae7de4182a88197511ff |     4
--  018f3ef19445b22bbabc7c9a664ace5b |     4
--  3026eb259d962ff3dbefcef261857ecc |     4
-- (35 rows)
--
--
-- npmrds_routing=# select node_id, count(distinct id) from intersection group by node_id having count(distinct id) > 1;
--  node_id | count 
-- ---------+-------
-- (0 rows)
--
-- So, I was making the false assumption that the id column in intersection is a Primary Key.
--   The good news is that node---intersection is 1-to-1.
--
-- QUESTION: What do these multiple entries per intersection id look like?
--
-- select
-- 		id,
-- 		node_id,
-- 		inbound_reference_ids,
-- 		outbound_reference_ids,
-- 		lon,
-- 		lat
-- 	from intersection
-- 	where node_id in (
-- 		select node_id
-- 			from intersection
-- 			group by node_id
-- 			having count(1) = 4
-- 			limit 1
-- 	)
-- ;
-- 
-- -[ RECORD 1 ]----------+-----------------------------------------------------------------------------------------------------
-- id                     | e99168daaab85de68e8f688c071e744e
-- node_id                | 41263463
-- inbound_reference_ids  | {2a71545608d07b9e5888bd323e8f4903,e2f873c6b8ed07d567f2224ceb5010b8,6977920e59e34058576a541237f585c1}
-- outbound_reference_ids | {1f39204eff7807eb9f4ece48456b7e51,f8de443bb3d6551dc0d51fbb553e6309,98662444e64826ed9a41509427017711}
-- lon                    | -73.7479238
-- lat                    | 42.6755497
-- -[ RECORD 2 ]----------+-----------------------------------------------------------------------------------------------------
-- id                     | e99168daaab85de68e8f688c071e744e
-- node_id                | 41263463
-- inbound_reference_ids  | {2a71545608d07b9e5888bd323e8f4903}
-- outbound_reference_ids | {1f39204eff7807eb9f4ece48456b7e51}
-- lon                    | -73.7479238
-- lat                    | 42.6755497
-- -[ RECORD 3 ]----------+-----------------------------------------------------------------------------------------------------
-- id                     | e99168daaab85de68e8f688c071e744e
-- node_id                | 41263463
-- inbound_reference_ids  | {6977920e59e34058576a541237f585c1,e2f873c6b8ed07d567f2224ceb5010b8,1a61e0c3c648bc2b08367c4d685f7755}
-- outbound_reference_ids | {f8de443bb3d6551dc0d51fbb553e6309,98662444e64826ed9a41509427017711,1f39204eff7807eb9f4ece48456b7e51}
-- lon                    | -73.7479238
-- lat                    | 42.6755497
-- -[ RECORD 4 ]----------+-----------------------------------------------------------------------------------------------------
-- id                     | e99168daaab85de68e8f688c071e744e
-- node_id                | 41263463
-- inbound_reference_ids  | {}
-- outbound_reference_ids | {1f39204eff7807eb9f4ece48456b7e51}
-- lon                    | -73.7479238
-- lat                    | 42.6755497
--
-- QUESTION: What the forms of way for the above intersection's inbound_reference_ids and outbound_reference_ids arrays?
-- 
-- select 
--     id,
--     inbound_forms_of_way,
--     outbound_forms_of_way
--   from (
--     select distinct
--         i.id,
--         i.ctid,
--         jsonb_agg(ibr_fow order by ibr_idx) as inbound_forms_of_way
--       from
--         intersection as i
--         LEFT JOIN LATERAL unnest(inbound_reference_ids) with ordinality as ib(ibr_id, ibr_idx) ON TRUE
--         LEFT JOIN LATERAL (select id, form_of_way as ibr_fow from reference) as ibr ON (ibr.id = ibr_id)
--       where (i.id = 'e99168daaab85de68e8f688c071e744e')
--       group by (i.id, i.ctid)
--   ) as ins INNER JOIN (
--     select distinct
--         i.id,
--         i.ctid,
--         jsonb_agg(obr_fow order by obr_idx) as outbound_forms_of_way
--       from
--         intersection as i
--         LEFT JOIN LATERAL unnest(outbound_reference_ids) with ordinality as ob(obr_id, obr_idx) ON TRUE
--         LEFT JOIN LATERAL (select id, form_of_way as obr_fow from reference) as obr ON (obr.id = obr_id)
--       where (i.id = 'e99168daaab85de68e8f688c071e744e')
--       group by (i.id, i.ctid)
--   ) AS outs USING (id, ctid)
-- ;
-- 
-- -[ RECORD 1 ]---------+----------------------------------------------------------
-- id                    | e99168daaab85de68e8f688c071e744e
-- inbound_forms_of_way  | ["MultipleCarriageway", "SingleCarriageway", "Undefined"]
-- outbound_forms_of_way | ["SlipRoad", "Undefined", "SingleCarriageway"]
-- -[ RECORD 2 ]---------+----------------------------------------------------------
-- id                    | e99168daaab85de68e8f688c071e744e
-- inbound_forms_of_way  | ["MultipleCarriageway"]
-- outbound_forms_of_way | ["SlipRoad"]
-- -[ RECORD 3 ]---------+----------------------------------------------------------
-- id                    | e99168daaab85de68e8f688c071e744e
-- inbound_forms_of_way  | ["Undefined", "SingleCarriageway", "MultipleCarriageway"]
-- outbound_forms_of_way | ["Undefined", "SingleCarriageway", "SlipRoad"]
-- -[ RECORD 4 ]---------+----------------------------------------------------------
-- id                    | e99168daaab85de68e8f688c071e744e
-- inbound_forms_of_way  | [null]
-- outbound_forms_of_way | ["SlipRoad"]
--
-- Definition of carriageway:
--     https://wiki.openstreetmap.org/wiki/Highways#Carriageways
--
-- TODO: QUESTION: What is the reason for this? Why does SharedStreets handle intersections like this?

-- ========== Building the pgRouting ways <-> SharedStreets references join table ==========

-- select count(1) from ways;
--  count 
-- -------
--  20281
-- (1 row)
-- 
-- select count(distinct gid) from ways inner join geom_ways_nodes_view on (osm_id::text = way_id);
--  count 
-- -------
--  20281
-- (1 row)
--
-- select 1 from ways group by gid having count(osm_id) > 1;
--  ?column? 
-- ----------
-- (0 rows)

-- select
--     ways.gid,
--     ways.osm_id as way_id,
--     gwn_start.way_geom_idx as way_idx_in_st_geom,
--     ways.source_osm as source_node,
--     gwn_start.node_way_idx as st_node_idx_in_way_in_geom,
--     gwn_end.way_geom_idx as way_idx_in_end_geom,
--     ways.target_osm as target_node,
--     gwn_end.node_way_idx as end_node_idx_in_way_in_geom,
--     gwn_start.geometry_id as st_shst_geom_id,
--     gwn_end.geometry_id as end_shst_geom_id
--   from ways
--     left outer join geom_ways_nodes_view gwn_start
--       on (
--         (ways.osm_id::text = gwn_start.way_id)
--         and
--         (ways.source_osm::text = gwn_start.node_id)
--       )
--     left outer join geom_ways_nodes_view gwn_end
--       on (
--         (ways.osm_id::text = gwn_end.way_id)
--         and
--         (ways.target_osm::text = gwn_end.node_id)
--       )
--   where (
--     ( gwn_start.way_geom_idx < gwn_end.way_geom_idx )
--     or
--     (
--       ( gwn_start.way_geom_idx = gwn_end.way_geom_idx )
--       and
--       ( gwn_start.node_way_idx < gwn_end.node_way_idx )
--     )
--   )
--   and ( gid = '3760' )
--   limit 10
-- ;
-- 
--  gid  |  way_id   | way_idx_in_st_geom | source_node | st_node_idx_in_way_in_geom | way_idx_in_end_geom | target_node | end_node_idx_in_way_in_geom |         st_shst_geom_id          |         end_shst_geom_id         
-- ------+-----------+--------------------+-------------+----------------------------+---------------------+-------------+-----------------------------+----------------------------------+----------------------------------
--  3760 | 139644961 |                  1 |    41373581 |                          1 |                   1 |    41299045 |                           4 | 0009f77cb2baf0941c4aca5d525b1ee9 | 0009f77cb2baf0941c4aca5d525b1ee9
--  3760 | 139644961 |                  1 |    41373581 |                          2 |                   1 |    41299045 |                           4 | 3ae453ad3343ebcf81e181721772abc4 | 0009f77cb2baf0941c4aca5d525b1ee9
--  3760 | 139644961 |                  1 |    41373581 |                          1 |                   1 |    41299045 |                           4 | 937efd2de7840283d3b54dd05bfe9666 | 0009f77cb2baf0941c4aca5d525b1ee9
--  3760 | 139644961 |                  1 |    41373581 |                          1 |                   1 |    41299045 |                           4 | 0009f77cb2baf0941c4aca5d525b1ee9 | 937efd2de7840283d3b54dd05bfe9666
--  3760 | 139644961 |                  1 |    41373581 |                          2 |                   1 |    41299045 |                           4 | 3ae453ad3343ebcf81e181721772abc4 | 937efd2de7840283d3b54dd05bfe9666
--  3760 | 139644961 |                  1 |    41373581 |                          1 |                   1 |    41299045 |                           4 | 937efd2de7840283d3b54dd05bfe9666 | 937efd2de7840283d3b54dd05bfe9666
-- (6 rows)
--
--
-- QUESTION: What's going on in the case of a cycle in the above. 937e->0009 and 0009->937e
--
-- select * from geom_ways_nodes_view
--   where (
--     ( geometry_id in ('0009f77cb2baf0941c4aca5d525b1ee9', '937efd2de7840283d3b54dd05bfe9666') )
--     and
--     ( way_id = '139644961' )
--   )
-- ;
-- 
--            geometry_id            |  way_id   | way_geom_idx | node_id  | node_way_idx
-- ----------------------------------+-----------+--------------+----------+--------------
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373581 |            1
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373585 |            2
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373589 |            3
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41299045 |            4
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373581 |            1
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373585 |            2
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373589 |            3
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41299045 |            4
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373596 |            5
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373600 |            6
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373604 |            7
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373606 |            8
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41299084 |            9
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373611 |           10
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373615 |           11
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373619 |           12
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373622 |           13
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373625 |           14
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373627 |           15
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373631 |           16
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373636 |           17
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373639 |           18
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373642 |           19
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373645 |           20
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373649 |           21
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373653 |           22
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373657 |           23
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373661 |           24
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373664 |           25
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373669 |           26
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373672 |           27
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373674 |           28
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373679 |           29
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373682 |           30
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373684 |           31
-- (35 rows)
--
-- ANSWER: 937e contains 0009.
--

-- QUESTION: What about that third geometry?
--
-- select * from geom_ways_nodes_view
--  where (
--    ( geometry_id in ('0009f77cb2baf0941c4aca5d525b1ee9', '937efd2de7840283d3b54dd05bfe9666', '3ae453ad3343ebcf81e181721772abc4') )
--    and
--    ( way_id = '139644961' )
--  )
--   order by 1,3,5
-- ;
-- -- 
--            geometry_id            |  way_id   | way_geom_idx | node_id  | node_way_idx
-- ----------------------------------+-----------+--------------+----------+--------------
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373581 |            1
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373585 |            2
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41373589 |            3
--  0009f77cb2baf0941c4aca5d525b1ee9 | 139644961 |            1 | 41299045 |            4
--  3ae453ad3343ebcf81e181721772abc4 | 139644961 |            1 | 41373580 |            1
--  3ae453ad3343ebcf81e181721772abc4 | 139644961 |            1 | 41373581 |            2
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373581 |            1
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373585 |            2
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373589 |            3
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41299045 |            4
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373596 |            5
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373600 |            6
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373604 |            7
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373606 |            8
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41299084 |            9
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373611 |           10
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373615 |           11
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373619 |           12
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373622 |           13
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373625 |           14
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373627 |           15
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373631 |           16
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373636 |           17
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373639 |           18
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373642 |           19
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373645 |           20
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373649 |           21
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373653 |           22
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373657 |           23
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373661 |           24
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373664 |           25
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373669 |           26
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373672 |           27
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373674 |           28
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373679 |           29
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373682 |           30
--  937efd2de7840283d3b54dd05bfe9666 | 139644961 |            1 | 41373684 |           31
-- (37 rows)
--
-- Answer way 139644961 starts at the end of 3ae4

--  select
   --  ways.gid,
   --  ways.osm_id as way_id,
   --  gwn_start.way_geom_idx as way_idx_in_st_geom,
   --  ways.source_osm as source_node,
   --  gwn_start.node_way_idx as st_node_idx_in_way_in_geom,
   --  gwn_end.way_geom_idx as way_idx_in_end_geom,
   --  ways.target_osm as target_node,
   --  gwn_end.node_way_idx as end_node_idx_in_way_in_geom,
   --  gwn_start.geometry_id as st_shst_geom_id,
   --  gwn_end.geometry_id as end_shst_geom_id
 --  from ways
   --  left outer join geom_ways_nodes_view gwn_start
     --  on (
       --  (ways.osm_id::text = gwn_start.way_id)
       --  and
       --  (ways.source_osm::text = gwn_start.node_id)
     --  )
   --  left outer join geom_ways_nodes_view gwn_end
     --  on (
       --  (ways.osm_id::text = gwn_end.way_id)
       --  and
       --  (ways.target_osm::text = gwn_end.node_id)
     --  )
 --  where (
   --  (
     --  ( gwn_start.geometry_id = gwn_end.geometry_id )
     --  and
     --  ( gwn_start.node_way_idx < gwn_end.node_way_idx )
   --  )
 --  )
 --  and ( gid = '3760' )
 --  limit 10
--  ;

-- select count(gid)
--   from (
--     select 
--         ways.gid,
--         ways.osm_id::text,
--         gwn_start.geometry_id,
--         rank() over (
--           partition by ways.gid
--           order by 
--             ST_Length(geometry.the_geom),
--             gwn_start.node_way_idx,
--             gwn_end.node_way_idx
--         )
--       from ways
--         left outer join geom_ways_nodes_view gwn_start
--           on (
--             (ways.osm_id::text = gwn_start.way_id)
--             and
--             (ways.source_osm::text = gwn_start.node_id)
--           )
--         left outer join geom_ways_nodes_view gwn_end
--           on (
--             (ways.osm_id::text = gwn_end.way_id)
--             and
--             (ways.target_osm::text = gwn_end.node_id)
--             and
--             ( gwn_start.geometry_id = gwn_end.geometry_id )
--             and
--             ( gwn_start.node_way_idx < gwn_end.node_way_idx )
--           )
--         inner join geometry on (gwn_start.geometry_id = geometry.id)
--   ) AS t
--   where ( rank = 1 )
-- ;
--  count
-- -------
--  20281
-- (1 row)
-- 
-- npmrds_routing=# select count(1) from ways;
--  count
-- -------
--  20281
-- (1 row)
--
-- CONCLUSION: This is how we join pgRouting ways to SharedStreets geometries
--
-- QUESTION: How do we go from geometries to references?
-- 
--   It seems as though the way to do this is to replace the geom_way_nodes_view with a ref_way_nodes_view.
--
-- select id, geometry_id, form_of_way, jsonb_pretty(location_references) from reference
--   where geometry_id = '0000689d1882c1b14e22fe3386c0b293';
--                 id                |           geometry_id            |    form_of_way    |                         jsonb_pretty                          
-- ----------------------------------+----------------------------------+-------------------+---------------------------------------------------------------
--  012147899dd7ca46e5122c9b33f15819 | 0000689d1882c1b14e22fe3386c0b293 | SingleCarriageway | [                                                            +
--                                   |                                  |                   |     {                                                        +
--                                   |                                  |                   |         "lat": 42.72553,                                     +
--                                   |                                  |                   |         "lon": -73.7976228,                                  +
--                                   |                                  |                   |         "intersectionId": "6e31010486dc258730796fba113e59fd",+
--                                   |                                  |                   |         "outboundBearing": 138,                              +
--                                   |                                  |                   |         "distanceToNextRef": 30131                           +
--                                   |                                  |                   |     },                                                       +
--                                   |                                  |                   |     {                                                        +
--                                   |                                  |                   |         "lat": 42.7232909,                                   +
--                                   |                                  |                   |         "lon": -73.7955637,                                  +
--                                   |                                  |                   |         "inboundBearing": 146,                               +
--                                   |                                  |                   |         "intersectionId": "3a4092619f77bb5a0ca7a36c9983bb14" +
--                                   |                                  |                   |     }                                                        +
--                                   |                                  |                   | ]
--  67324515fd5c54fa03640d47f2702745 | 0000689d1882c1b14e22fe3386c0b293 | SingleCarriageway | [                                                            +
--                                   |                                  |                   |     {                                                        +
--                                   |                                  |                   |         "lat": 42.7232909,                                   +
--                                   |                                  |                   |         "lon": -73.7955637,                                  +
--                                   |                                  |                   |         "intersectionId": "3a4092619f77bb5a0ca7a36c9983bb14",+
--                                   |                                  |                   |         "outboundBearing": 326,                              +
--                                   |                                  |                   |         "distanceToNextRef": 30131                           +
--                                   |                                  |                   |     },                                                       +
--                                   |                                  |                   |     {                                                        +
--                                   |                                  |                   |         "lat": 42.72553,                                     +
--                                   |                                  |                   |         "lon": -73.7976228,                                  +
--                                   |                                  |                   |         "inboundBearing": 318,                               +
--                                   |                                  |                   |         "intersectionId": "6e31010486dc258730796fba113e59fd" +
--                                   |                                  |                   |     }                                                        +
--                                   |                                  |                   | ]
-- (2 rows)
--
-- select geometry_id, jsonb_pretty(osm_metadata) from metadata where geometry_id = '0000689d1882c1b14e22fe3386c0b293';
--            geometry_id            |              jsonb_pretty               
-- ----------------------------------+-----------------------------------------
--  0000689d1882c1b14e22fe3386c0b293 | {                                      +
--                                   |     "name": "Ulenski Drive",           +
--                                   |     "waySections": [                   +
--                                   |         {                              +
--                                   |             "link": false,             +
--                                   |             "name": "",                +
--                                   |             "wayId": "5592906",        +
--                                   |             "oneWay": false,           +
--                                   |             "nodeIds": [               +
--                                   |                 "41545936",            +
--                                   |                 "3357060590",          +
--                                   |                 "1104589757",          +
--                                   |                 "998985203",           +
--                                   |                 "1104589859",          +
--                                   |                 "41264652",            +
--                                   |                 "41529765",            +
--                                   |                 "41545949",            +
--                                   |                 "41529753"             +
--                                   |             ],                         +
--                                   |             "roadClass": "Residential",+
--                                   |             "roundabout": false        +
--                                   |         }                              +
--                                   |     ]                                  +
--                                   | }
-- (1 row)
--
-- select geometry_id, osm_metadata->'waySections'->0->'nodeIds'->>0 as start_node,
--   osm_metadata->'waySections'->(jsonb_array_length(osm_metadata->'waySections') - 1)->'nodeIds'->>(jsonb_array_length(osm_metadata->'waySections'->(jsonb_array_length(osm_metadata->'waySections') - 1)->'nodeIds') - 1)
--   from metadata limit 3;
--            geometry_id            | start_node |  ?column?
-- ----------------------------------+------------+------------
--  0000689d1882c1b14e22fe3386c0b293 | 41545936   | 41529753
--  000751508bbd6190c4176cafa9ed200a | 41525824   | 1748857826
--  00098bfe29a690d16269ee08f9ac9604 | 41302967   | 41365742
-- (3 rows)
--
--
-- select
--     geom_start_end_nodes.geometry_id,
--     source_intersection.id as source_intersection_id,
--     target_intersection.id as target_intersection_id
--   from (
--     select
--         geometry_id,
--         osm_metadata->'waySections'->0->'nodeIds'->>0 as source_node,
--         osm_metadata
--           ->'waySections'
--             ->(jsonb_array_length(osm_metadata->'waySections') - 1)
--               ->'nodeIds'
--                 ->>(
--                   jsonb_array_length(
--                     osm_metadata->
--                       'waySections'
--                         ->(
--                           jsonb_array_length(
--                             osm_metadata->'waySections'
--                           ) - 1)
--                             ->'nodeIds'
--                   ) - 1
--                 ) as target_node
--       from metadata
--   ) as geom_start_end_nodes
--     inner join intersection as source_intersection
--       on (
--         geom_start_end_nodes.source_node = source_intersection.node_id
--       )
--     inner join intersection as target_intersection
--       on (
--         geom_start_end_nodes.target_node = target_intersection.node_id
--       )
--   limit 3;
-- 
--            geometry_id            |      source_intersection_id      |      target_intersection_id
-- ----------------------------------+----------------------------------+----------------------------------
--  0000689d1882c1b14e22fe3386c0b293 | 6e31010486dc258730796fba113e59fd | 3a4092619f77bb5a0ca7a36c9983bb14
--  000751508bbd6190c4176cafa9ed200a | 0a89a4a610baeecec884b3001f222330 | 4463d5ef010dff3625e87dd1a45d3ec1
--  00098bfe29a690d16269ee08f9ac9604 | e4c5485b639cc34ee0e1fddfb0d9bf37 | 5df3741d86413f56dc298fe8770f7ff6
-- (3 rows)
--
-- select
--     ref.id as reference_id,
--     ref.geometry_id,
--     source_intersection_id,
--     target_intersection_id
--   from reference as ref
--     inner join (
--       select
--           geom_start_end_nodes.geometry_id,
--           source_intersection.id as source_intersection_id,
--           target_intersection.id as target_intersection_id
--         from (
--           select
--               geometry_id,
--               osm_metadata->'waySections'->0->'nodeIds'->>0 as source_node,
--               osm_metadata
--                 ->'waySections'
--                   ->(jsonb_array_length(osm_metadata->'waySections') - 1)
--                     ->'nodeIds'
--                       ->>(
--                         jsonb_array_length(
--                           osm_metadata->
--                             'waySections'
--                               ->(
--                                 jsonb_array_length(
--                                   osm_metadata->'waySections'
--                                 ) - 1)
--                                   ->'nodeIds'
--                         ) - 1
--                       ) as target_node
--             from metadata
--         ) as geom_start_end_nodes
--           inner join intersection as source_intersection
--             on (
--               geom_start_end_nodes.source_node = source_intersection.node_id
--             )
--           inner join intersection as target_intersection
--             on (
--               geom_start_end_nodes.target_node = target_intersection.node_id
--             )
--     ) as geom_interesctions on (
--       ( ref.geometry_id = geom_interesctions.geometry_id )
--       and
--       ( ref.location_references->0->>'intersectionId' = geom_interesctions.source_intersection_id )
--       and
--       ( ref.location_references->1->>'intersectionId' = geom_interesctions.target_intersection_id )
--     )
--   order by 2
--   limit 6
-- ;
-- 
--            reference_id           |           geometry_id            |      source_intersection_id      |      target_intersection_id      
-- ----------------------------------+----------------------------------+----------------------------------+----------------------------------
--  012147899dd7ca46e5122c9b33f15819 | 0000689d1882c1b14e22fe3386c0b293 | 6e31010486dc258730796fba113e59fd | 3a4092619f77bb5a0ca7a36c9983bb14
--  c7873d1580df61a1b79642478b39e978 | 000751508bbd6190c4176cafa9ed200a | 0a89a4a610baeecec884b3001f222330 | 4463d5ef010dff3625e87dd1a45d3ec1
--  988fbe62886187787fe2bd9e659ddcab | 00098bfe29a690d16269ee08f9ac9604 | e4c5485b639cc34ee0e1fddfb0d9bf37 | 5df3741d86413f56dc298fe8770f7ff6
--  e53dc411d52ff5f19253ca006e052fef | 0009f77cb2baf0941c4aca5d525b1ee9 | 23033a7ce095dd9fa7569576188d98cd | fba9a5087a0371b859a065092a39fc25
--  e53dc411d52ff5f19253ca006e052fef | 0009f77cb2baf0941c4aca5d525b1ee9 | 23033a7ce095dd9fa7569576188d98cd | fba9a5087a0371b859a065092a39fc25
--  25a8f1fcfaec68b7f0dfdae52d06692a | 000aed1ec0b04e3002eaf626b537d9ce | 1745df31b093fa554e92b050d338d33c | 09d887367f5692f8c6931c7317a86253
-- (6 rows)
--
--
--  CREATE OR REPLACE VIEW sharedstreets.ref_geom_ways_nodes_view
  --  AS
    --  SELECT
        --  forward_reference_id,
        --  back_reference_id,
        --  metadata.geometry_id,
        --  TRIM(
          --  both '"' FROM way_section->>'wayId'
        --  ) AS way_id,
        --  (way_sections).way_geom_idx,
        --  TRIM(
          --  both '"' FROM node_id::TEXT
        --  ) AS node_id,
        --  (node_ids).node_way_idx
      --  FROM geometry 
        --  inner join sharedstreets.metadata on (metadata.geometry_id = geometry.id),
        --  jsonb_array_elements(osm_metadata->'waySections') WITH ordinality AS way_sections(way_section, way_geom_idx),
        --  jsonb_array_elements((way_sections).way_section->'nodeIds') WITH ordinality AS node_ids(node_id, node_way_idx)
--  ;

--  select count(gid)

--  CREATE OR REPLACE VIEW pgr_ways_to_shst_references
  --  AS
    --  SELECT
        --  gid,
        --  osm_id,
        --  forward_reference_id,
        --  back_reference_id,
        --  geometry_id
      --  FROM (
        --  SELECT 
            --  ways.gid,
            --  ways.osm_id::text,
            --  rgwn_start.forward_reference_id,
            --  rgwn_start.back_reference_id,
            --  rgwn_start.geometry_id,
            --  rank() over (
              --  PARTITION BY ways.gid
              --  ORDER BY 
                --  ST_Length(geometry.the_geom),
                --  rgwn_start.node_way_idx,
                --  gwn_end.node_way_idx
            --  )
          --  FROM ways
            --  LEFT OUTER JOIN ref_geom_ways_nodes_view rgwn_start
              --  ON (
                --  (ways.osm_id::text = rgwn_start.way_id)
                --  and
                --  (ways.source_osm::text = rgwn_start.node_id)
              --  )
            --  LEFT OUTER JOIN ref_geom_ways_nodes_view gwn_end
              --  ON (
                --  (ways.osm_id::text = gwn_end.way_id)
                --  and
                --  (ways.target_osm::text = gwn_end.node_id)
                --  and
                --  ( rgwn_start.geometry_id = gwn_end.geometry_id )
                --  and
                --  ( rgwn_start.node_way_idx < gwn_end.node_way_idx )
              --  )
            --  INNER JOIN geometry ON (rgwn_start.geometry_id = geometry.id)
      --  ) AS t
      --  WHERE ( rank = 1 )
--  ;

-- SharedStreets References (SSR) are directional edges in a road network.
-- Two-way streets have two SSRs, one for each direction of travel, while one-way streets only have one SSR.
-- In the draft specification these are labeled "forward references" and "back references,"
--   with the forward reference following the direction of the map geometry used to generate the references.

--  select *
  --  from pgr_dijkstra(
    --  'SELECT
         --  gid as id,
         --  source,
         --  target,
         --  cost,
         --  reverse_cost
       --  FROM ways
    --  ',
    --  (
      --  select
          --  gid
        --  from ways
        --  where ST_DWithin(
            --  ST_SetSRID(
              --  ST_Makepoint(
                --  -73.822241,
                --  42.676169
              --  ), 4326
            --  ),
            --  the_geom,
            --  30.48
          --  )
        --  order by ST_Distance(
          --  ST_SetSRID(
            --  ST_Makepoint(
              --  -73.822241,
              --  42.676169
            --  ), 4326
          --  ),
          --  the_geom
        --  )
        --  limit 1
    --  ),
    --  (
      --  select
          --  gid
        --  from ways
        --  where ST_DWithin(
            --  ST_SetSRID(
              --  ST_Makepoint(
                --  -73.781892,
                --  42.619850
              --  ), 4326
            --  ),
            --  the_geom,
            --  30.48
          --  )
        --  order by ST_Distance(
          --  ST_SetSRID(
            --  ST_Makepoint(
              --  -73.781892,
              --  42.619850
            --  ), 4326
          --  ),
          --  the_geom
        --  )
        --  limit 1
    --  )
  --  )
--  ;

--  CREATE OR REPLACE FUNCTION pgr_route_from_coords (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
  --  RETURNS TABLE (seq INT, path_seq INT, node BIGINT, edge BIGINT, cost DOUBLE PRECISION, agg_cost DOUBLE PRECISION)
  --  AS 
  --  $$ 
    --  select *
      --  from pgr_dijkstra(
        --  'SELECT
             --  gid as id,
             --  source,
             --  target,
             --  cost,
             --  reverse_cost
           --  FROM ways
        --  ',
        --  (
          --  select
              --  source
            --  from ways
            --  where ST_DWithin(
                --  ST_SetSRID(
                  --  ST_Makepoint(
                    --  -- TODO: Flip these back
                    --  --  ($1)[1],
                    --  --  ($1)[2]
                    --  ($1)[2],
                    --  ($1)[1]
                  --  ), 4326
                --  ),
                --  the_geom,
                --  30.48
              --  )
            --  order by ST_Distance(
              --  ST_SetSRID(
                --  ST_Makepoint(
                    --  -- TODO: Flip these back
                    --  --  ($1)[1],
                    --  --  ($1)[2]
                    --  ($1)[2],
                    --  ($1)[1]
                --  ), 4326
              --  ),
              --  the_geom
            --  )
            --  limit 1
        --  ),
        --  (
          --  select
              --  target
            --  from ways
            --  where ST_DWithin(
                --  ST_SetSRID(
                  --  ST_Makepoint(
                    --  -- TODO: Flip these back
                    --  --  ($1)[1],
                    --  --  ($1)[2]
                    --  ($2)[2],
                    --  ($2)[1]
                  --  ), 4326
                --  ),
                --  the_geom,
                --  30.48
              --  )
            --  order by ST_Distance(
              --  ST_SetSRID(
                --  ST_Makepoint(
                    --  -- TODO: Flip these back
                    --  --  ($1)[1],
                    --  --  ($1)[2]
                    --  ($2)[2],
                    --  ($2)[1]
                --  ), 4326
              --  ),
              --  the_geom
            --  )
            --  limit 1
        --  )
      --  )
  --  $$
  --  LANGUAGE SQL
--  ;


--  CREATE OR REPLACE FUNCTION pgr_route_from_coords_m2m (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
--  RETURNS TABLE (seq INT, path_seq INT, start_vid BIGINT, end_vid BIGINT, node BIGINT, edge BIGINT, cost DOUBLE PRECISION, agg_cost DOUBLE PRECISION)
  --  AS 
  --  $$ 
    --  select *
      --  from pgr_dijkstra(
        --  'SELECT
             --  gid as id,
             --  source,
             --  target,
             --  cost,
             --  reverse_cost
           --  FROM ways
        --  ',
        --  (
          --  select array_agg(source)
            --  from (
              --  select
                  --  source
                --  from ways
                --  where ST_DWithin(
                    --  --  ST_SetSRID(
                      --  --  ST_Makepoint(
                        --  --  ($1)[1],
                        --  --  ($1)[2]
                      --  --  ), 4326
                    --  --  ),
                    --  -- Google Maps
                    --  ST_SetSRID(
                      --  ST_Makepoint(
                        --  ($1)[2],
                        --  ($1)[1]
                      --  ), 4326
                    --  ),
                    --  the_geom,
                    --  50
                  --  )
                --  order by ST_Distance(
                  --  --  ST_SetSRID(
                    --  --  ST_Makepoint(
                      --  --  ($1)[1],
                      --  --  ($1)[2]
                    --  --  ), 4326
                  --  --  ),
                  --  -- Google Maps
                  --  ST_SetSRID(
                    --  ST_Makepoint(
                      --  ($1)[2],
                      --  ($1)[1]
                    --  ), 4326
                  --  ),
                  --  the_geom
                --  )
                --  limit 3
            --  ) AS t
        --  ),
        --  (
          --  select array_agg(target)
            --  from (
              --  select
                  --  target
                --  from ways
                --  where ST_DWithin(
                    --  --  ST_SetSRID(
                      --  --  ST_Makepoint(
                        --  --  ($1)[1],
                        --  --  ($1)[2]
                      --  --  ), 4326
                    --  --  ),
                    --  -- Google Maps
                    --  ST_SetSRID(
                      --  ST_Makepoint(
                        --  ($2)[2],
                        --  ($2)[1]
                      --  ), 4326
                    --  ),
                    --  the_geom,
                    --  50
                  --  )
                --  order by ST_Distance(
                  --  -- Google Maps
                  --  --  ST_SetSRID(
                    --  --  ST_Makepoint(
                      --  --  ($1)[1],
                      --  --  ($1)[2]
                    --  --  ), 4326
                  --  --  ),
                  --  -- Google Maps
                  --  ST_SetSRID(
                    --  ST_Makepoint(
                      --  ($2)[2],
                      --  ($2)[1]
                    --  ), 4326
                  --  ),
                  --  the_geom
                --  )
                --  limit 3
          --  ) as t
        --  )
      --  )
  --  $$
  --  LANGUAGE SQL
--  ;


--  select
    --  path_seq,
    --  gid,
    --  tmc
  --  from pgr_route_from_coords(ARRAY[-73.781892, 42.619861], ARRAY[-73.791589, 42.666113]) AS route
    --  inner join pgr_ways_to_shst_references as w2r
      --  on (route.edge = w2r.gid)
    --  inner join tmc_matches
      --  on (w2r.forward_reference_id = tmc_matches.shst_reference_id)

--  pgr_route_from_coords(ARRAY[-73.763281, 42.656709], ARRAY[-73.821314, 42.707658])

--  select
    --  gid
  --  from ways
  --  where ST_DWithin(
      --  ST_SetSRID(
        --  ST_Makepoint(
          --  -73.763281, 42.656709
        --  ), 4326
      --  ),
      --  the_geom,
      --  30.48
    --  )
  --  order by ST_Distance(
    --  ST_SetSRID(
      --  ST_Makepoint(
        --  -73.763281, 42.656709
      --  ), 4326
    --  ),
    --  the_geom
  --  )
  --  limit 1
--  ;

--  select
    --  gid
  --  from ways
  --  where ST_DWithin(
      --  ST_SetSRID(
        --  ST_Makepoint(
          --  -73.821314, 42.707658
        --  ), 4326
      --  ),
      --  the_geom,
      --  30.48
    --  )
  --  order by ST_Distance(
    --  ST_SetSRID(
      --  ST_Makepoint(
        --  -73.821314, 42.707658
      --  ), 4326
    --  ),
    --  the_geom
  --  )
  --  limit 1
--  ;

--  CREATE OR REPLACE FUNCTION pgr_route_from_coords_m2m_npmrds (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
  --  RETURNS TABLE (
    --  seq INT,
    --  path_seq INT,
    --  start_vid BIGINT,
    --  end_vid BIGINT,
    --  node BIGINT,
    --  edge BIGINT,
    --  cost DOUBLE PRECISION, 
    --  agg_cost DOUBLE PRECISION
  --  ) AS 
  --  $$ 
    --  select *
      --  from pgr_dijkstra(
        --  'SELECT
             --  gid as id,
             --  source,
             --  target,
             --  cost,
             --  reverse_cost
           --  FROM ways
            --  INNER JOIN tmcs2ways_via_geometry_id t2w
              --  ON (ways.osm_id::TEXT = t2w.way_id)
        --  ',
        --  (
          --  select array_agg(source)
            --  from (
              --  select
                  --  source
                --  from ways
                --  where ST_DWithin(
                    --  -- Google Maps
                    --  ST_SetSRID(
                      --  ST_Makepoint(
                        --  ($1)[2],
                        --  ($1)[1]
                      --  ), 4326
                    --  ),
                    --  the_geom,
                    --  50
                  --  )
                --  order by ST_Distance(
                  --  -- Google Maps
                  --  ST_SetSRID(
                    --  ST_Makepoint(
                      --  ($1)[2],
                      --  ($1)[1]
                    --  ), 4326
                  --  ),
                  --  the_geom
                --  )
                --  limit 3
            --  ) AS t
        --  ),
        --  (
          --  select array_agg(target)
            --  from (
              --  select
                  --  target
                --  from ways
                --  where ST_DWithin(
                    --  -- Google Maps
                    --  ST_SetSRID(
                      --  ST_Makepoint(
                        --  ($2)[2],
                        --  ($2)[1]
                      --  ), 4326
                    --  ),
                    --  the_geom,
                    --  50
                  --  )
                --  order by ST_Distance(
                  --  -- Google Maps
                  --  ST_SetSRID(
                    --  ST_Makepoint(
                      --  ($2)[2],
                      --  ($2)[1]
                    --  ), 4326
                  --  ),
                  --  the_geom
                --  )
                --  limit 3
          --  ) as t
        --  )
      --  )
  --  $$
  --  LANGUAGE SQL
--  ;


--  CREATE OR REPLACE FUNCTION pgr_route_from_coords_m2m_npmrds (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
  --  RETURNS TABLE (
    --  seq INT,
    --  path_seq INT,
    --  start_vid BIGINT,
    --  end_vid BIGINT,
    --  node BIGINT,
    --  edge BIGINT,
    --  cost DOUBLE PRECISION, 
    --  agg_cost DOUBLE PRECISION
  --  ) AS 
  --  $$ 
    --  with cte_pts as (
      --  -- TODO: Google Maps format (lat, lon). Switch to PostGIS (lon, lat)
      --  select
        --  ST_SetSRID(
          --  ST_Makepoint(
            --  ($1)[2],
            --  ($1)[1]
          --  ), 4326
        --  ) AS start_pt,
        --  ST_SetSRID(
          --  ST_Makepoint(
            --  ($2)[2],
            --  ($2)[1]
          --  ), 4326
        --  ) AS end_pt
    --  )
    --  select *
      --  from pgr_dijkstra(
        --  'SELECT
             --  gid as id,
             --  source,
             --  target,
             --  cost,
             --  reverse_cost
           --  FROM ways
            --  INNER JOIN tmcs2ways_via_geometry_id t2w
              --  ON (ways.osm_id::TEXT = t2w.way_id)
        --  ',
        --  (
          --  select array_agg(source)
            --  from (
              --  select
                  --  source
                --  from ways, cte_pts
                --  where ST_DWithin(
                    --  cte_pts.start_pt,
                    --  the_geom,
                    --  50
                  --  )
                --  order by ST_Distance(
                  --  cte_pts.start_pt,
                  --  the_geom
                --  )
                --  limit 3
            --  ) AS t
        --  ),
        --  (
          --  select array_agg(target)
            --  from (
              --  select
                  --  target
                --  from ways, cte_pts
                --  where ST_DWithin(
                  --  cte_pts.end_pt,
                  --  the_geom,
                  --  50
                --  )
                --  order by ST_Distance(
                  --  cte_pts.end_pt,
                  --  the_geom
                --  )
                --  limit 3
          --  ) as t
        --  )
      --  )
  --  $$
  --  LANGUAGE SQL
--  ;


--  CREATE OR REPLACE FUNCTION pgr_route_from_coords_m2m_osm (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
  --  RETURNS TABLE (
    --  seq INT,
    --  path_seq INT,
    --  start_vid BIGINT,
    --  end_vid BIGINT,
    --  node BIGINT,
    --  edge BIGINT,
    --  cost DOUBLE PRECISION, 
    --  agg_cost DOUBLE PRECISION
  --  ) AS 
  --  $$ 
    --  with cte_pts as (
      --  -- TODO: Google Maps format (lat, lon). Switch to PostGIS (lon, lat)
      --  select
        --  ST_SetSRID(
          --  ST_Makepoint(
            --  ($1)[2],
            --  ($1)[1]
          --  ), 4326
        --  ) AS start_pt,
        --  ST_SetSRID(
          --  ST_Makepoint(
            --  ($2)[2],
            --  ($2)[1]
          --  ), 4326
        --  ) AS end_pt
    --  ), cte_routes as (
      --  select *
        --  from pgr_dijkstra(
          --  'SELECT
               --  gid as id,
               --  source,
               --  target,
               --  cost,
               --  reverse_cost
             --  FROM ways
          --  ',
          --  (
            --  select array_agg(source)
              --  from (
                --  select
                    --  source
                  --  from ways, cte_pts
                  --  where ST_DWithin(
                      --  cte_pts.start_pt,
                      --  the_geom,
                      --  50
                    --  )
                  --  order by ST_Distance(
                    --  cte_pts.start_pt,
                    --  the_geom
                  --  )
                  --  limit 1
              --  ) AS t
          --  ),
          --  (
            --  select array_agg(target)
              --  from (
                --  select
                    --  target
                  --  from ways, cte_pts
                  --  where ST_DWithin(
                    --  cte_pts.end_pt,
                    --  the_geom,
                    --  50
                  --  )
                  --  order by ST_Distance(
                    --  cte_pts.end_pt,
                    --  the_geom
                  --  )
                  --  limit 1
            --  ) as t
          --  )
        --  )
    --  )
    --  select * from cte_routes;
  --  $$
  --  LANGUAGE SQL
--  ;


CREATE OR REPLACE FUNCTION pgr_route_from_coords_m2m_npmrds (start_coords DOUBLE PRECISION[], end_coords DOUBLE PRECISION[])
  RETURNS TABLE (
    seq INT,
    path_seq INT,
    start_vid BIGINT,
    end_vid BIGINT,
    node BIGINT,
    edge BIGINT,
    cost DOUBLE PRECISION, 
    agg_cost DOUBLE PRECISION
  ) AS 
  $$ 
    with cte_pts as (
      -- TODO: Google Maps format (lat, lon). Switch to PostGIS (lon, lat)
      select
        ST_SetSRID(
          ST_Makepoint(
            ($1)[2],
            ($1)[1]
          ), 4326
        ) AS start_pt,
        ST_SetSRID(
          ST_Makepoint(
            ($2)[2],
            ($2)[1]
          ), 4326
        ) AS end_pt
    )
    select *
      from pgr_dijkstra(
        'SELECT
             gid as id,
             source,
             target,
             cost,
             reverse_cost
           FROM ways
            INNER JOIN tmcs2ways_via_geometry_id t2w
              ON (ways.osm_id::TEXT = t2w.way_id)
        ',
        (
          select array_agg(source)
            from (
              select
                  source
                from ways, cte_pts
                where ST_DWithin(
                    cte_pts.start_pt,
                    the_geom,
                    50
                  )
                order by ST_Distance(
                  cte_pts.start_pt,
                  the_geom
                )
                limit 1
            ) AS t
        ),
        (
          select array_agg(target)
            from (
              select
                  target
                from ways, cte_pts
                where ST_DWithin(
                  cte_pts.end_pt,
                  the_geom,
                  50
                )
                order by ST_Distance(
                  cte_pts.end_pt,
                  the_geom
                )
                limit 1
          ) as t
        )
      )
  $$
  LANGUAGE SQL
;

